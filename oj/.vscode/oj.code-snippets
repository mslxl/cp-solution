{
	// Place your oj 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Start to work on oj": {
		"scope": "cpp",
		"prefix": "main",
		"body": [
			"#include <iostream>",
			"#include <cstdio>",
			"#include <cstring>",
			"#include <map>",
			"#include <set>",
			"#include <string>",
			"#include <vector>",
			"#include <algorithm>",
			"#include <cmath>",
			"#define _for(i,init,lim) for(int i=(init);  i< (lim); i++)",
			"#define _rep(i,init,lim_eq) for(int i=(init); i<=(lim_eq); ++i)",
			"#define _br() std::cout << std::endl;",
			"typedef long long ll;",
			"typedef unsigned long long ull;",
			"int main(int argc, char const *argv[]){",
			"\tstd::ios::sync_with_stdio(false);",
			"\t$1",
			"\treturn 0;",
			"}"
		]
	},
	"Include file": {
		"scope": "c,cpp",
		"prefix": "inc",
		"body": "#include <$1>"
	}
}